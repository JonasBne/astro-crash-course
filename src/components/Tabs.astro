---
interface Tab {
    heading: string;
    content: string;
}

interface Props {
    tabs: Tab[];
}

const { tabs } = Astro.props;
const tabHeadings = tabs.map((tab) => tab.heading);
const tabContents = tabs.map((tab) => tab.content);
---

<div id="tabs" class="mt-4 mx-6">
    <ul id="tabs-header" class="flex bg-black text-white px-2 py-4">
        {
            tabHeadings.map((heading) => (
                <li class="mr-6 cursor-pointer">{heading}</li>
            ))
        }
    </ul>
    <ul id="tabs-content" class="border border-black font-bold pl-2 py-6">
        {tabContents.map((content) => <code class="tab">{content}</code>)}
    </ul>
</div>

<script>
    function createTabs(element: any) {
        const header = element.querySelector("#tabs-header");
        const content = element.querySelector("#tabs-content");
        const tab_headers = [...header.children];
        const tab_contents = [...content.children];
        tab_contents.forEach((x) => (x.style.display = "none"));
        let current_tab_index = -1;
        function setTab(index: any) {
            if (current_tab_index > -1) {
                tab_headers[current_tab_index].style.fontWeight = 400;
                tab_headers[current_tab_index].style.color = "#fff";
                tab_contents[current_tab_index].style.display = "none";
            }
            tab_headers[index].style.fontWeight = 800;
            tab_headers[index].style.color = "#a741ff";
            tab_contents[index].style.display = "flex";
            current_tab_index = index;
        }
        let default_tab_index = tab_headers.findIndex((x) => {
            return [...x.classList].indexOf("default-tab") > -1;
        });
        default_tab_index = default_tab_index === -1 ? 0 : default_tab_index;
        setTab(default_tab_index);
        tab_headers.forEach((x, i) => (x.onclick = (event: any) => setTab(i)));
    }
    // Run
    [...document.querySelectorAll("#tabs")].forEach((x) => createTabs(x));
</script>
